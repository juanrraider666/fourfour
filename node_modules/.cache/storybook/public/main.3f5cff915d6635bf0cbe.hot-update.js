self["webpackHotUpdatefourfour"]("main",{

/***/ "./web lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]web(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(json%7Cyaml%7Cyml))$":
/*!**************************************************************************************************************************************************************************************************************!*\
  !*** ./web/ lazy ^\.\/.*$ include: (?:[\\/]web(?:[\\/](?%21\.)(?:(?:(?%21(?:^%7C[\\/])\.).)*?)[\\/]%7C[\\/]%7C$)(?%21\.)(?=.)[^\\/]*?\.stories\.(json%7Cyaml%7Cyml))$ chunkName: [request] namespace object ***!
  \**************************************************************************************************************************************************************************************************************/
/***/ ((module) => {

function webpackEmptyAsyncContext(req) {
	// Here Promise.resolve().then() is used instead of new Promise() to prevent
	// uncaught exception popping up in devtools
	return Promise.resolve().then(() => {
		var e = new Error("Cannot find module '" + req + "'");
		e.code = 'MODULE_NOT_FOUND';
		throw e;
	});
}
webpackEmptyAsyncContext.keys = () => ([]);
webpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;
webpackEmptyAsyncContext.id = "./web lazy recursive ^\\.\\/.*$ include: (?:[\\\\/]web(?:[\\\\/](?%21\\.)(?:(?:(?%21(?:^%7C[\\\\/])\\.).)*?)[\\\\/]%7C[\\\\/]%7C$)(?%21\\.)(?=.)[^\\\\/]*?\\.stories\\.(json%7Cyaml%7Cyml))$";
module.exports = webpackEmptyAsyncContext;

/***/ })

});
//# sourceMappingURL=main.3f5cff915d6635bf0cbe.hot-update.js.map